#### File Playback Library ####
project(vgm-player)
cmake_minimum_required(VERSION 2.8)

set(LIBVGM_SOURCE_DIR ${PROJECT_SOURCE_DIR}/..)

set(PLAYER_DEFS)
set(PLAYER_FILES
	dblk_compr.c
	helper.c
	playerbase.cpp
	droplayer.cpp
	s98player.cpp
	vgmplayer_cmdhandler.cpp
	vgmplayer.cpp
)
# export headers
set(PLAYER_HEADERS
	dblk_compr.h
	helper.h
	playerbase.hpp
	droplayer.hpp
	s98player.hpp
	vgmplayer.hpp
)
set(PLAYER_INCLUDES)
set(PLAYER_LIBS)

# String Codepage Conversion
# --------------------------
find_package(Iconv QUIET)
if(WIN32)
	set(CAN_WINAPI NOT ${ICONV_FOUND})
else()
	set(CAN_WINAPI OFF)
endif()


option(PLAYER_CHARCNV_ICONV "Charset Conversion: iconv" ${ICONV_FOUND})
option(PLAYER_CHARCNV_WINAPI "Charset Conversion: WinAPI" ${CAN_WINAPI})

if(PLAYER_CHARCNV_WINAPI)
	set(PLAYER_FILES ${PLAYER_FILES} StrUtils-CPConv_Win.c)
else()
	find_package(Iconv REQUIRED)
	set(PLAYER_FILES ${PLAYER_FILES} StrUtils-CPConv_IConv.c)
	set(PLAYER_LIBS ${PLAYER_LIBS} Iconv::Iconv)
endif()

add_library(${PROJECT_NAME} STATIC ${PLAYER_FILES})
set_property(TARGET ${PROJECT_NAME} PROPERTY POSITION_INDEPENDENT_CODE ON)

target_compile_definitions(${PROJECT_NAME} PUBLIC ${PLAYER_DEFS})

target_include_directories(${PROJECT_NAME}
	PUBLIC ${LIBVGM_SOURCE_DIR}
	PRIVATE ${LIBVGM_SOURCE_DIR}/libs/include
)
if(WIN32 AND NOT MSVC)
	target_include_directories(${PROJECT_NAME} PRIVATE
		${LIBVGM_SOURCE_DIR}/libs/include_mingw
	)
elseif(MSVC)
	target_include_directories(${PROJECT_NAME} PRIVATE
		${LIBVGM_SOURCE_DIR}/libs/include_vc
	)
	if(MSVC_VERSION LESS 1400)
		target_include_directories(${PROJECT_NAME} PRIVATE
			${LIBVGM_SOURCE_DIR}/libs/include_vc6
		)
	endif()
endif()
target_include_directories(${PROJECT_NAME} PRIVATE ${PLAYER_INCLUDES})

target_link_libraries(${PROJECT_NAME} PRIVATE ${PLAYER_LIBS} vgm-emu vgm-utils)

install(TARGETS ${PROJECT_NAME}
		RUNTIME DESTINATION "bin"
		LIBRARY DESTINATION "lib"
		ARCHIVE DESTINATION "lib"
		)
install(FILES ${PLAYER_HEADERS} DESTINATION include/player)
